"""Initial Migration

Revision ID: 4a63b23643ce
Revises: 
Create Date: 2024-03-28 09:43:08.315815

"""
from typing import Sequence, Union
from src.config import settings
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

schemas = settings.SCHEMAS.split(",")

# revision identifiers, used by Alembic.
revision: str = '4a63b23643ce'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    for schema in schemas:
        op.execute(text(f"CREATE SCHEMA IF NOT EXISTS {schema}"))
        op.create_table('roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        schema=schema
        )
        op.create_table('users',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('username', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('contact_number', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('is_employee', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('contact_number'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username'),
        schema=schema
        )
        op.create_table('user_role',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['role_id'], [f'{schema}.roles.id'], ),
        sa.ForeignKeyConstraint(['user_id'], [f'{schema}.users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id', 'role_id', name='_user_role_uc'),
        schema=schema
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    for schema in schemas:
    # ### commands auto generated by Alembic - please adjust! ###
        op.drop_table('user_role', schema=schema)
        op.drop_table('users', schema=schema)
        op.drop_table('roles', schema=schema)
    # ### end Alembic commands ###
